from __future__ import annotations

import logging

import discord
from discord.ext import commands

log = logging.getLogger(__name__)


class Logs(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.log_channel_id: int | None = None
        self.welcome_channel_id: int | None = None
        self.welcome_image_url: str | None = None

    async def cog_load(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–≥–∞"""
        await self._load_welcome_settings()

    @commands.Cog.listener()
    async def on_member_join(self, member: discord.Member):
        log.info("Member joined: %s (%s)", member, member.id)
        await self._send_log(
            embed=discord.Embed(title="üëã –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è", description=f"{member.mention}", color=discord.Color.green())
        )
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ embed –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        if self.welcome_channel_id:
            channel = member.guild.get_channel(self.welcome_channel_id)
            if isinstance(channel, discord.TextChannel):
                try:
                    # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ
                    embed = discord.Embed(
                        color=0x00BFFF,  # –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ
                    )
                    
                    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å –ø–∏–Ω–≥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    embed.description = f"**{member.mention}** Welcome new member~!!\n\n"
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
                    rules_channel = await self._get_channel_link("rules", member.guild.id)
                    roles_channel = await self._get_channel_link("roles", member.guild.id)
                    general_channel = await self._get_channel_link("general", member.guild.id)
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å —ç–º–æ–¥–∑–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏
                    instructions = [        
                        f"üìñ {rules_channel}", 
                        f"üé≠ {roles_channel}",
                        f"üí¨ {general_channel}"
                    ]
                    
                    for instruction in instructions:
                        embed.description += f"{instruction}\n"
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
                    if hasattr(self, "welcome_image_url") and self.welcome_image_url:
                        embed.set_image(url=self.welcome_image_url)
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
                    embed.add_field(
                        name="üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", 
                        value=str(member.guild.member_count), 
                        inline=True
                    )
                    
                    embed.timestamp = discord.utils.utcnow()
                    embed.set_footer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
                    
                    await channel.send(embed=embed)
                except Exception:
                    log.exception("Failed to send welcome embed")

    @commands.Cog.listener()
    async def on_member_remove(self, member: discord.Member):
        log.info("Member left: %s (%s)", member, member.id)
        await self._send_log(
            embed=discord.Embed(title="üëã –ü–æ–∫–∏–Ω—É–ª", description=f"{member.mention}", color=discord.Color.red())
        )

    @commands.hybrid_command(name="logs-setup", description="–£–∫–∞–∑–∞—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤")
    @commands.has_guild_permissions(manage_guild=True)
    async def logs_setup(self, ctx: commands.Context, channel: discord.TextChannel):
        self.log_channel_id = channel.id
        await ctx.reply("‚úÖ –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –Ω–∞ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")

    @commands.hybrid_command(name="welcome-setup", description="–£–∫–∞–∑–∞—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ (–æ–ø—Ü.) –∫–∞—Ä—Ç–∏–Ω–∫—É")
    @commands.has_guild_permissions(manage_guild=True)
    async def welcome_setup(self, ctx: commands.Context, channel: discord.TextChannel, image_url: str | None = None):
        self.welcome_channel_id = channel.id
        if image_url:
            self.welcome_image_url = image_url
        # persist –≤ –ë–î
        try:
            db = self.bot.db  # type: ignore[attr-defined]
            await db.exec("INSERT OR REPLACE INTO settings(key, value) VALUES('welcome_channel_id', ?)", str(channel.id))
            if image_url:
                await db.exec("INSERT OR REPLACE INTO settings(key, value) VALUES('welcome_image_url', ?)", image_url)
        except Exception:
            log.exception("Failed to persist welcome settings")
        await ctx.reply(f"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {channel.mention}{' (–∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞)' if image_url else ''}")

    @commands.hybrid_command(name="welcome-channels", description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏")
    @commands.has_guild_permissions(manage_guild=True)
    async def welcome_channels(self, ctx: commands.Context, 
                             rules: discord.TextChannel | None = None,
                             roles: discord.TextChannel | None = None,
                             general: discord.TextChannel | None = None,
                             rules_desc: str | None = None,
                             roles_desc: str | None = None,
                             general_desc: str | None = None):
        """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        - rules: –∫–∞–Ω–∞–ª —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
        - roles: –∫–∞–Ω–∞–ª —Å —Ä–æ–ª—è–º–∏  
        - general: –æ–±—â–∏–π –∫–∞–Ω–∞–ª
        - rules_desc: –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "read our rules")
        - roles_desc: –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–æ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "get your roles")
        - general_desc: –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –æ–±—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "Talk with others")
        """
        try:
            db = self.bot.db
            channels_set = []
            
            if rules:
                await db.exec(
                    "INSERT OR REPLACE INTO welcome_channels (channel_type, channel_id, channel_name, description) VALUES (?, ?, ?, ?)",
                    "rules", rules.id, rules.name, rules_desc or ""
                )
                desc_text = f" ({rules_desc})" if rules_desc else ""
                channels_set.append(f"üìñ Rules: {rules.mention}{desc_text}")
                
            if roles:
                await db.exec(
                    "INSERT OR REPLACE INTO welcome_channels (channel_type, channel_id, channel_name, description) VALUES (?, ?, ?, ?)",
                    "roles", roles.id, roles.name, roles_desc or ""
                )
                desc_text = f" ({roles_desc})" if roles_desc else ""
                channels_set.append(f"üé≠ Roles: {roles.mention}{desc_text}")
                
            if general:
                await db.exec(
                    "INSERT OR REPLACE INTO welcome_channels (channel_type, channel_id, channel_name, description) VALUES (?, ?, ?, ?)",
                    "general", general.id, general.name, general_desc or ""
                )
                desc_text = f" ({general_desc})" if general_desc else ""
                channels_set.append(f"üí¨ General: {general.mention}{desc_text}")
            
            if channels_set:
                await ctx.reply(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–∞–Ω–∞–ª—ã –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:\n" + "\n".join(channels_set))
            else:
                await ctx.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
                
        except Exception as e:
            log.exception("Error setting welcome channels: %s", e)
            await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–æ–≤.")

    @commands.hybrid_command(name="welcome-preview", description="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
    @commands.has_guild_permissions(manage_guild=True)
    async def welcome_preview(self, ctx: commands.Context):
        """–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            embed = discord.Embed(
                color=0x00BFFF,  # –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ
            )
            
            # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å –ø–∏–Ω–≥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            embed.description = f"**{ctx.author.mention}** Welcome new member~!!\n\n"
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
            rules_channel = await self._get_channel_link("rules", ctx.guild.id)
            roles_channel = await self._get_channel_link("roles", ctx.guild.id)
            general_channel = await self._get_channel_link("general", ctx.guild.id)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å —ç–º–æ–¥–∑–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏
            instructions = [
                f"üìñ {rules_channel}", 
                f"üé≠ {roles_channel}",
                f"üí¨ {general_channel}"
            ]
            
            for instruction in instructions:
                embed.description += f"{instruction}\n"
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
            if hasattr(self, "welcome_image_url") and self.welcome_image_url:
                embed.set_image(url=self.welcome_image_url)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
            embed.add_field(
                name="üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", 
                value=str(ctx.guild.member_count), 
                inline=True
            )
            
            embed.timestamp = discord.utils.utcnow()
            embed.set_footer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
            
            await ctx.reply("üìã –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", embed=embed)
            
        except Exception as e:
            log.exception("Error in welcome preview: %s", e)
            await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")

    @commands.hybrid_command(name="welcome-list", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")
    @commands.has_guild_permissions(manage_guild=True)
    async def welcome_list(self, ctx: commands.Context):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
        try:
            db = self.bot.db
            channels = await db.fetchall(
                "SELECT channel_type, channel_id, channel_name, description FROM welcome_channels ORDER BY channel_type"
            )
            
            if not channels:
                await ctx.reply("üìã –ö–∞–Ω–∞–ª—ã –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")
                return
                
            embed = discord.Embed(
                title="üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è",
                color=discord.Color.blurple()
            )
            
            for channel_type, channel_id, channel_name, description in channels:
                channel = ctx.guild.get_channel(channel_id)
                if channel:
                    desc_text = f" ({description})" if description else ""
                    embed.add_field(
                        name=f"{'üìñ' if channel_type == 'rules' else 'üé≠' if channel_type == 'roles' else 'üí¨'} {channel_type.title()}",
                        value=f"{channel.mention}{desc_text}",
                        inline=False
                    )
            
            await ctx.reply(embed=embed)
            
        except Exception as e:
            log.exception("Error listing welcome channels: %s", e)
            await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤.")

    async def _load_welcome_settings(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏–∑ –ë–î"""
        try:
            db = self.bot.db
            # –ó–∞–≥—Ä—É–∂–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
            result = await db.fetchone("SELECT value FROM settings WHERE key='welcome_channel_id'")
            if result and result[0].isdigit():
                self.welcome_channel_id = int(result[0])
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            result = await db.fetchone("SELECT value FROM settings WHERE key='welcome_image_url'")
            if result:
                self.welcome_image_url = result[0]
        except Exception as e:
            log.exception("Failed to load welcome settings: %s", e)

    async def _get_channel_link(self, channel_type: str, guild_id: int) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ —Ç–∏–ø—É"""
        try:
            db = self.bot.db
            result = await db.fetchone(
                "SELECT channel_id, channel_name, description FROM welcome_channels WHERE channel_type = ?", 
                channel_type
            )
            if result:
                channel_id, channel_name, description = result
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
                link_text = description if description else channel_name
                # –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ [—Ç–µ–∫—Å—Ç](—Å—Å—ã–ª–∫–∞)
                return f"[{link_text}](https://discord.com/channels/{guild_id}/{channel_id})"
            return channel_type.replace('_', ' ').title()
        except Exception:
            return channel_type.replace('_', ' ').title()

    async def _send_log(self, *, embed: discord.Embed):
        if not self.log_channel_id:
            return
        channel = self.bot.get_channel(self.log_channel_id)
        if isinstance(channel, discord.TextChannel):
            try:
                await channel.send(embed=embed)
            except Exception:
                pass


async def setup(bot: commands.Bot):
    await bot.add_cog(Logs(bot))


